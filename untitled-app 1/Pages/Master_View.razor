@page "/"
@using Northwind
@inject INorthwindService northwindService
@*@inject IJSRuntime JS*@
@*@implements IAsyncDisposable*@

<div class="row-layout master-view-container">
    <IgbGrid Data="northwindEmployees" PrimaryKey="EmployeeID" DisplayDensity="DisplayDensity.Cosy" AllowFiltering="true" FilterMode="FilterMode.ExcelStyleFilter" AutoGenerate="false" class="ig-typography grid" master_view-scope>
        <IgbColumn Field="EmployeeID" DataType="GridColumnDataType.Number" Header="employeeID" Sortable="true" Selectable="false"></IgbColumn>
        <IgbColumn Field="LastName" DataType="GridColumnDataType.String" Header="lastName" Sortable="true" Selectable="false"></IgbColumn>
        <IgbColumn Field="FirstName" DataType="GridColumnDataType.String" Header="firstName" Sortable="true" Selectable="false"></IgbColumn>
        <IgbColumn Field="Title" DataType="GridColumnDataType.String" Header="title" Sortable="true" Selectable="false"></IgbColumn>
        <IgbColumn Field="TitleOfCourtesy" DataType="GridColumnDataType.String" Header="titleOfCourtesy" Sortable="true" Selectable="false"></IgbColumn>
        <IgbColumn Field="BirthDate" DataType="GridColumnDataType.Date" Header="birthDate" Sortable="true" Selectable="false"></IgbColumn>
        <IgbColumn Field="HireDate" DataType="GridColumnDataType.Date" Header="hireDate" Sortable="true" Selectable="false"></IgbColumn>
        <IgbColumn Field="Address.Street" DataType="GridColumnDataType.String" Header="address street" Sortable="true" Selectable="false"></IgbColumn>
        <IgbColumn Field="Address.City" DataType="GridColumnDataType.String" Header="address city" Sortable="true" Selectable="false"></IgbColumn>
        <IgbColumn Field="Address.Region" DataType="GridColumnDataType.String" Header="address region" Sortable="true" Selectable="false"></IgbColumn>
        <IgbColumn Field="Address.PostalCode" DataType="GridColumnDataType.String" Header="address postalCode" Sortable="true" Selectable="false"></IgbColumn>
        <IgbColumn Field="Address.Country" DataType="GridColumnDataType.String" Header="address country" Sortable="true" Selectable="false"></IgbColumn>
        <IgbColumn Field="Address.Phone" DataType="GridColumnDataType.String" Header="address phone" Sortable="true" Selectable="false"></IgbColumn>
        <IgbColumn Field="ManagerID" DataType="GridColumnDataType.Number" Header="managerID" Sortable="true" Selectable="false"></IgbColumn>
        <IgbColumn Field="Notes" DataType="GridColumnDataType.String" Header="notes" Sortable="true" Selectable="false"></IgbColumn>
        <IgbColumn Field="AvatarUrl" DataType="GridColumnDataType.String" Header="avatarUrl" Sortable="true" Selectable="false"></IgbColumn>
    </IgbGrid>

    <IgbDataGrid Height="100%" Width="100%"
                 RowHeight="50"
                 DataSource="northwindEmployees"
                 AutoGenerateColumns="true"
                 IsColumnOptionsEnabled="true"
                 IsGroupCollapsable="true"
                 ActivationMode="GridActivationMode.Cell"
                 SummaryScope="@SummaryScope.Root"
                 GroupSummaryDisplayMode="@GroupSummaryDisplayMode.RowBottom"
                 GroupHeaderDisplayMode="@GroupHeaderDisplayMode.Combined"
                 CornerRadiusTopLeft="0"
                 CornerRadiusTopRight="0"
                 ColumnMovingSeparatorWidth="2"
                 ColumnMovingMode="ColumnMovingMode.Deferred"
                 ColumnMovingAnimationMode="ColumnMovingAnimationMode.SlideOver"
                 ColumnShowingAnimationMode="ColumnShowingAnimationMode.SlideFromRightAndFadeIn"
                 ColumnHidingAnimationMode="ColumnHidingAnimationMode.SlideToRightAndFadeOut"
                 SelectionMode="DataGridSelectionMode.SingleRow">
    </IgbDataGrid>

    @*<div id="revealDashBoard" class="reveal-dash-board"></div>*@
</div>

@code {
    private List<EmployeesType> northwindEmployees = new();
    private IJSObjectReference? module;

    protected override async Task OnInitializedAsync()
    {
        northwindEmployees = await northwindService.GetEmployees();
    }

    #region Reveal init
    //protected override async Task OnAfterRenderAsync(bool firstRender)
    //{
    //    if (firstRender)
    //    {
    //        this.module = await JS.InvokeAsync<IJSObjectReference>("import", "./Pages/Master_View.razor.js");
    //        await this.module.InvokeVoidAsync("main");
    //    }

    //    await base.OnAfterRenderAsync(firstRender);
    //}

    //async ValueTask IAsyncDisposable.DisposeAsync()
    //{
    //    if (this.module != null)
    //    {
    //        await module.DisposeAsync();
    //    }
    //}
    #endregion
}
